generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model invoices {
  id             Int                 @id @default(autoincrement())
  invoice_number String              @db.VarChar(100)
  orders_id      Int
  payment_status payment_status_enum @default(not_paid)
  pay_at         DateTime?           @db.Timestamp(6)
  created_at     DateTime            @default(now()) @db.Timestamp(6)
  updated_at     DateTime?           @db.Timestamp(6)
  orders         orders              @relation(fields: [orders_id], references: [id], onDelete: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model master_category {
  id         Int        @id @default(autoincrement())
  category   String     @db.VarChar(100)
  created_at DateTime   @default(now()) @db.Timestamp(6)
  updated_at DateTime?  @db.Timestamp(6)
  services   services[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model orders {
  id           Int          @id @default(autoincrement())
  users_id     Int
  services_id  Int?
  total_weight Float?
  total_item   Int?
  total_price  BigInt       @default(0)
  status       order_status
  created_at   DateTime?    @default(now()) @db.Timestamp(6)
  updated_at   DateTime?    @db.Timestamp(6)
  invoices     invoices[]
  services     services?    @relation(fields: [services_id], references: [id], onDelete: NoAction)
  users        users        @relation(fields: [users_id], references: [id], onDelete: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model roles {
  id         Int       @id @default(autoincrement())
  role       String    @db.VarChar(100)
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)
  users      users[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model services {
  id              Int              @id @default(autoincrement())
  name            String           @db.VarChar(100)
  category        Int?
  type            service_type?
  duration_days   Int              @default(0)
  unit            service_unit?
  price           BigInt           @default(0)
  description     String?
  created_at      DateTime         @default(now()) @db.Timestamp(6)
  updated_at      DateTime?        @db.Timestamp(6)
  orders          orders[]
  master_category master_category? @relation(fields: [category], references: [id], onDelete: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id           Int       @id @default(autoincrement())
  uid          String    @unique @db.VarChar(50)
  role         Int
  name         String    @db.VarChar(100)
  email        String?   @db.VarChar(100)
  password     String?   @db.VarChar(255)
  phone_number String?   @db.VarChar(20)
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime? @db.Timestamp(6)
  deleted_at   DateTime? @db.Timestamp(6)
  orders       orders[]
  roles        roles     @relation(fields: [role], references: [id], onDelete: NoAction)
}

enum order_status {
  on_progress @map("on progress")
  done
}

enum payment_status_enum {
  not_paid       @map("not paid")
  partially_paid @map("partially paid")
  paid
}

enum service_type {
  regular
  express
}

enum service_unit {
  kg
  item
}
